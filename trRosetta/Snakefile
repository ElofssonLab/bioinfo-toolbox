#configfile: "config.yaml"

# It is best practice to have subsequent steps of a workflow in
# separate, unique, output folders. This keeps the working directory
# structured. Further, such unique prefixes allow Snakemake to prune
# the search space for dependencies.

#envvars:
#    "LC_NUMERIC='en_US.UTF-8'"

SingImage="~/singularity-images/trRosetta.simg"
trRosettaPath="~/git/bioinfo-toolbox/trRosetta/"

#rule all:
#  input: ["{dataset}/file.A.txt".format(dataset=dataset) for dataset in DATASETS]


rule jackhmmer:
    input:
        "seq/{seq}.fasta"
    output:
        "msa/{seq}.sto"
    shell:
        "jackhmmer -N 1 -A {output} {input}   ~/Downloads/originalrefproteomes.fasta"


        
rule merge:
    input:
        A="msa/{seqA}.sto",
        B="msa/{seqB}.sto"
    output:
        "dimer/{seqA}-{seqB}.a3m"
    shell:
        "python3 {trRosettaPath}/mergeSTObyGenome.py -i {input.A} -j {input.B} > {output}"


rule trimmed:
    input:
        "dimer/{seq}.a3m"
    output:
        "dimer/{seq}.trimmed"
    shell:
        "python3 {trRosettaPath}/a3mToTrimmed.py {input} > {output}"
        

rule mergedfasta:
    input:
        "dimer/{seq}.trimmed"
    output:
        "dimer/{seq}.fa"
    shell:
        "head -2 {input}>{output}"

rule predict:
    input:
        "dimer/{seq}.trimmed"
    output:
        "distpred/{seq}.npz"
    shell:
        "singularity run {SingImage} python3 ./network/predict.py -m  ./model2019_07  {input} {output}"



rule analyze:
    input:
       NPZ="distpred/{seq}.npz",
       FA="dimer/{seq}.fa"
    output:
       ANALYZE="results/{seq}.analyze",
       PNG="results/{seq}.png"
    shell:
       "python3 {trRosettaPath}analyze_npz.py -i {input.NPZ} -s {input.FA} -o {output.PNG} > {output.ANALYZE}"

rule deletelinker:
    input:
       ANALYZE="results/{seq}.analyze",  # This is actually not needed - but we want to make sure it is made
       PNG="results/{seq}.png",  # This is actually not needed - but we want to make sure it is made
       NPZ="distpred/{seqA}-{seqB}.npz",
       FA="dimer/{seqA}-{seqB}.fa"
    output:
        "distpred/{seqA}-{seqB}_nodel.npz"
    shell:
        "python3 ./del_sepseq_npz.py  -i {input.NPZ} -s {input.FA} -o {output}"


rule pyrosetta:
    input:
       NPZ="distpred/{seqA}-{seqB}_nodel.npz",
       A="seq/{seqA}.fasta",
       B="seq/{seqB}.fasta"
    output:
        "model/{seqA}-{seqB}.pdb"
    shell:
        "singularity run {SingImage} python3 ./trRosetta-2chain.py {input.NPZ} {input.A} {input.B} {output}"
