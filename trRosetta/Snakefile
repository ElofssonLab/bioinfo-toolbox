configfile: "config.yaml"

# It is best practice to have subsequent steps of a workflow in
# separate, unique, output folders. This keeps the working directory
# structured. Further, such unique prefixes allow Snakemake to prune
# the search space for dependencies.

#envvars:
#    "LC_NUMERIC='en_US.UTF-8'"


#rule all:
#  input: ["{dataset}/file.A.txt".format(dataset=dataset) for dataset in DATASETS]

workdir: config['workdir']
jhparams=config['jhparams']
bind=config['bind']
SingImage=config['SingImage']
trRosettaPath=config['trRosettaPath']


rule jackhmmer:
    input:
        "seq/{seq}.fasta"
    output:
        "msa/{seq}.sto" 
    shell:
        "jackhmmer  {jhparams} -A {output} {input}   ~/Downloads/originalrefproteomes.fasta  "

rule merge:
    input:
        A="msa/{seqA}.sto",
        B="msa/{seqB}.sto"
    output:
        "dimer/{seqA}-{seqB}.a3m"
    shell:
        "python3 {trRosettaPath}/mergeSTObyGenome.py -i {input.A} -j {input.B} > {output}"



rule trimmed:
    input:
        "dimer/{seq}.a3m"
    output:
        "dimer/{seq}.trimmed"
    shell:
        "python3 {trRosettaPath}/a3mToTrimmed.py {input} > {output}"

rule merge_top1000:
    input:
        "seq/{seq}.trimmed"
    output:
        "msa/{seq}-top1000.trimmed"
    shell:
        "head -2000 {input}   > {output} "



rule mergedfasta:
    input:
        "dimer/{seq}.trimmed"
    output:
        "dimer/{seq}.fa"
    shell:
        "head -2 {input}>{output}"

rule predict:
    input:
        "dimer/{seq}.trimmed"
    output:
        "distpred/{seq}.npz"
    shell:
        "singularity run {bind}  {SingImage}  python3 {trRosettaPath}/network/predict.py -m  {trRosettaPath}/model2019_07  {input} {output}"




rule analyze:
    input:
       NPZ="distpred/{seq}.npz",
       FA="dimer/{seq}.fa"
    output:
       ANALYZE="results/{seq}.analyze",
       PNG="results/{seq}.png"
    shell:
       "python3 {trRosettaPath}analyze_npz.py -i {input.NPZ} -s {input.FA} -o {output.PNG} > {output.ANALYZE}"

rule deletelinker:
    input:
       NPZ="distpred/{seqA}-{seqB}.npz",
       FA="dimer/{seqA}-{seqB}.fa"
    output:
        "distpred/{seqA}-{seqB}_nosep.npz"
    shell:
        "python3 {trRosettaPath}/del_sepseq_npz.py  -i {input.NPZ} -s {input.FA} -o {output}"


rule pyrosetta:
    input:
       NPZ="distpred/{seqA}-{seqB}_nosep.npz",
       A="seq/{seqA}.fasta",
       B="seq/{seqB}.fasta"
    output:
        "model/{seqA}-{seqB}.pdb"
    shell:
        "singularity run  {bind} {SingImage} python3 {trRosettaPath}/trRosetta-2chain.py {input.NPZ} {input.A} {input.B} {output}"

rule pyrosetta_all:
    input:
       NPZ="distpred/{seqA}-{seqB}_nosep.npz",
       A="seq/{seqA}.fasta",
       B="seq/{seqB}.fasta"
    output:
        "model/{seqA}-{seqB}-allintra.pdb"
    shell:
        "singularity run  {bind} {SingImage} python3  {trRosettaPath}/trRosetta-2chain.py {input.NPZ} {input.A} {input.B} {output} -allintra "


